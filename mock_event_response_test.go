// Code generated by mockery v2.35.3. DO NOT EDIT.

package clustertool

import (
	serf "github.com/hashicorp/serf/serf"
	mock "github.com/stretchr/testify/mock"
)

// MockEventResponse is an autogenerated mock type for the EventResponse type
type MockEventResponse struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockEventResponse) Close() {
	_m.Called()
}

// ResponseCh provides a mock function with given fields:
func (_m *MockEventResponse) ResponseCh() <-chan serf.NodeResponse {
	ret := _m.Called()

	var r0 <-chan serf.NodeResponse
	if rf, ok := ret.Get(0).(func() <-chan serf.NodeResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan serf.NodeResponse)
		}
	}

	return r0
}

// NewMockEventResponse creates a new instance of MockEventResponse. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEventResponse(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEventResponse {
	mock := &MockEventResponse{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
